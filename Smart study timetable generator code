import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

// Class to store subject details
class Subject {
    String name;
    int difficulty;
    int daysToExam;

    Subject(String name, int difficulty, int daysToExam) {
        this.name = name;
        this.difficulty = difficulty;
        this.daysToExam = daysToExam;
    }
}

public class timetable {

    // üé® Fancy title
    static void printBanner() {
        System.out.println("=======================================");
        System.out.println("   üìö SMART STUDY TIMETABLE GENERATOR   ");
        System.out.println("=======================================\n");
    }

    // üé® Menu
    static void printMenu() {
        System.out.println("Choose an option:");
        System.out.println("1. Add Subjects");
        System.out.println("2. Generate Timetable");
        System.out.println("3. Exit");
        System.out.print("üëâ Enter choice: ");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        List<Subject> subjects = new ArrayList<>();
        int hours = 0;

        printBanner();

        while (true) {
            printMenu();
            int choice = sc.nextInt();

            switch (choice) {
                case 1 -> {
                    System.out.print("\nHow many subjects do you want to add? ");
                    int n = sc.nextInt();

                    for (int i = 0; i < n; i++) {
                        System.out.println("\n‚úèÔ∏è Enter details for Subject " + (i + 1));
                        System.out.print("Name: ");
                        String name = sc.next();

                        System.out.print("Difficulty (1=Easy, 5=Hard): ");
                        int diff = sc.nextInt();

                        System.out.print("Days until exam: ");
                        int days = sc.nextInt();

                        subjects.add(new Subject(name, diff, days));
                    }

                    System.out.print("\n‚è∞ Enter available study hours per day: ");
                    hours = sc.nextInt();

                    System.out.println("\n‚úÖ Subjects added successfully!\n");
                }

                case 2 -> {
                    if (subjects.isEmpty() || hours == 0) {
                        System.out.println("\n‚ö†Ô∏è Please add subjects first!\n");
                        break;
                    }

                    Map<String, Integer> weights = new HashMap<>();
                    int totalWeight = 0;

                    for (Subject s : subjects) {
                        int weight = s.difficulty + (10 - s.daysToExam);
                        if (weight < 1) weight = 1;
                        weights.put(s.name, weight);
                        totalWeight += weight;
                    }

                    StringBuilder timetable = new StringBuilder();
                    timetable.append("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó\n");
                    timetable.append("     üìÖ SUGGESTED STUDY TIMETABLE      \n");
                    timetable.append("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù\n");

                    for (Subject s : subjects) {
                        int allocated = (weights.get(s.name) * hours) / totalWeight;
                        if (allocated == 0) allocated = 1;

                        timetable.append(String.format(" %-10s ‚îÇ %2d hrs\n", s.name, allocated));
                    }

                    timetable.append("‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n");

                    // Print in console
                    System.out.println(timetable);

                    // Save to file
                    try {
                        FileWriter writer = new FileWriter("study_timetable.txt");
                        writer.write(timetable.toString());
                        writer.close();
                        System.out.println("üíæ Timetable saved to study_timetable.txt\n");
                    } catch (IOException e) {
                        System.out.println("‚ùå Error saving file: " + e.getMessage());
                    }
                }

                case 3 -> {
                    System.out.println("\nüëã Thank you for using Smart Study Timetable Generator!");
                    sc.close();
                    return;
                }

                default -> System.out.println("\n‚ö†Ô∏è Invalid choice! Please try again.\n");
            }
        }
    }
}
